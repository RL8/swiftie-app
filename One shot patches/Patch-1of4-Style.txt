{
  "patches": [
    {
      "file": "src/lib/components/Button/Button.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import { tap } from '@sveltejs/gestures';\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    interface Props {\n        variant?: ButtonProps['variant'];\n        size?: ButtonProps['size'];\n        disabled?: ButtonProps['disabled'];\n        fullWidth?: ButtonProps['fullWidth'];\n        type?: ButtonProps['type'];\n        children?: import('svelte').Snippet;\n        [key: string]: any\n    }\n\n    let {\n        variant = 'primary',\n        size = 'default',\n        disabled = false,\n        fullWidth = false,\n        type = 'button',\n        children,\n        ...rest\n    }: Props = $props();\n\n    function handleTap(event: CustomEvent) {\n        if (!disabled) {\n            dispatch('click', event.detail);\n        }\n    }\n\n    function handleTouchStart() {\n        if (navigator.vibrate && !disabled) {\n            navigator.vibrate(50);\n        }\n    }\n</script>\n\n<button\n    {type}\n    {disabled}\n    class=\"btn btn-{variant} {fullWidth ? 'btn-full' : ''} {size === 'compact' ? 'btn-compact' : ''}\"\n    class:btn-disabled={disabled}\n    use:tap\n    ontap={handleTap}\n    ontouchstart={handleTouchStart}\n    {...rest}\n>\n    {@render children?.()}\n</button>\n\n<style>\n    .btn {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        padding: 0.75rem 1.5rem;\n        border-radius: var(--radius-button, 9999px);\n        font-weight: 600;\n        transition: transform var(--duration-fast, 0.15s) var(--timing-function, ease-out);\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: transparent;\n    }\n\n    .btn:active:not(.btn-disabled) {\n        transform: translateY(1px);\n    }\n\n    .btn-primary {\n        background-color: var(--color-primary, rgb(244, 63, 94));\n        color: var(--text-light, white);\n    }\n\n    .btn-primary:active:not(.btn-disabled) {\n        background-color: var(--color-primary-dark, rgb(225, 29, 72));\n    }\n\n    .btn-secondary {\n        background-color: rgb(226, 232, 240);\n        color: var(--text-dark, rgb(15, 23, 42));\n    }\n\n    .btn-secondary:active:not(.btn-disabled) {\n        background-color: rgb(203, 213, 225);\n    }\n\n    .btn-disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n\n    .btn-full {\n        width: 100%;\n    }\n\n    .btn-compact {\n        padding: var(--spacing-button, 0.5rem);\n        font-size: 0.875rem;\n        min-width: unset;\n        opacity: 0.9;\n    }\n</style>"
    },
    {
      "file": "src/lib/components/music/VinylRecord.svelte",
      "action": "update",
      "content": "<!-- VinylRecord.svelte -->\n<script lang=\"ts\">\n    import { tap } from '@sveltejs/gestures';\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    interface Props {\n        /** The source URL for the album cover art */\n        coverArt: string;\n        /** The album title for alt text */\n        title: string;\n        /** Whether the record is currently selected */\n        selected?: boolean;\n        /** Whether to animate the record */\n        animate?: boolean;\n        /** Custom CSS class to apply to the container */\n        class_?: string;\n        /** Position of the heart badge. Can be 'image' | 'container' | 'none' */\n        badgePosition?: 'image' | 'container' | 'none';\n        /** Whether to show the selection overlay when selected */\n        showSelectionOverlay?: boolean;\n        /** Whether to show the vinyl grooves effect */\n        showGrooves?: boolean;\n        /** Configuration for the vinyl record's visual appearance */\n        config?: {\n            /** The color of the vinyl record's center */\n            centerColor: string;\n            /** The color of the vinyl record's grooves */\n            grooveColor: string;\n            /** The color of the selection overlay */\n            selectionColor: string;\n            /** The color of the heart badge */\n            badgeColor: string;\n        };\n        /** The selection number (1-3) to show when selected */\n        selectionNumber?: number | null;\n    }\n\n    let {\n        coverArt,\n        title,\n        selected = false,\n        animate = true,\n        class_ = '',\n        badgePosition = 'image',\n        showSelectionOverlay = true,\n        showGrooves = true,\n        config = {\n            centerColor: 'rgba(0, 0, 0, 0.8)',\n            grooveColor: 'rgba(255, 255, 255, 0.2)',\n            selectionColor: 'rgba(244, 63, 94, 0.2)',\n            badgeColor: 'var(--color-primary, rgb(244, 63, 94))'\n        },\n        selectionNumber = null\n    }: Props = $props();\n\n    // Random initial rotation for subtle animation\n    const randomRotation = Math.random() * 5 - 2.5;\n\n    function handleTap(event: CustomEvent) {\n        dispatch('click', event.detail);\n    }\n</script>\n\n<div\n    class=\"vinyl-container {class_}\"\n    class:selected\n    style=\"--random-rotation: {randomRotation};\"\n    use:tap\n    ontap={handleTap}\n>\n    {#if selected && badgePosition === 'container'}\n        <div class=\"heart-badge container-badge\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={config.badgeColor} class=\"heart-icon\">\n                <path d=\"M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z\" />\n            </svg>\n            <span class=\"heart-number\">{selectionNumber}</span>\n        </div>\n    {/if}\n    <div class=\"vinyl\">\n        <img\n            src={coverArt}\n            {title}\n            class=\"vinyl-art\"\n            alt={title}\n        />\n        {#if showGrooves}\n            <div class=\"vinyl-grooves\" style={`background: repeating-radial-gradient(circle at center, transparent 0, transparent 4px, ${config.grooveColor} 5px, rgba(0, 0, 0, 0.1125) 6px)`}></div>\n        {/if}\n        <div class=\"vinyl-center\" style={`background: radial-gradient(circle at center, ${config.centerColor} 0%, rgba(0, 0, 0, 0.9) 50%, #000 100%)`}></div>\n        {#if selected && badgePosition === 'image'}\n            <div class=\"heart-badge image-badge\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill={config.badgeColor} class=\"heart-icon\">\n                    <path d=\"M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z\" />\n                </svg>\n                <span class=\"heart-number\">{selectionNumber}</span>\n            </div>\n        {/if}\n        {#if selected && showSelectionOverlay}\n            <div class=\"selection-overlay\" style={`background: ${config.selectionColor}`}></div>\n        {/if}\n    </div>\n</div>\n\n<style>\n    .vinyl-container {\n        aspect-ratio: 1;\n        position: relative;\n        transform: rotate(calc(var(--random-rotation, 0) * 1deg));\n        transition: all var(--duration-fast, 0.3s) var(--timing-function, ease-out);\n        touch-action: manipulation;\n    }\n\n    .vinyl-container:not(.selected) {\n        animation: subtleRotate var(--duration-medium, 2s) ease-in-out infinite;\n    }\n\n    .vinyl-container.selected {\n        z-index: var(--z-content, 20);\n        animation: fullRotate var(--duration-slow, 8s) linear infinite;\n    }\n\n    .vinyl-container:active {\n        transform: scale(0.98);\n    }\n\n    @keyframes fullRotate {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n    }\n\n    @keyframes subtleRotate {\n        0% { transform: rotate(calc(var(--random-rotation, 0) * 1deg)); }\n        50% { transform: rotate(calc((var(--random-rotation, 0) + 2) * 1deg)); }\n        100% { transform: rotate(calc(var(--random-rotation, 0) * 1deg)); }\n    }\n\n    .vinyl {\n        position: absolute;\n        inset: 0;\n        border-radius: 50%;\n        background: #000;\n        overflow: hidden;\n        box-shadow: \n            0 4px 12px rgba(0, 0, 0, 0.2),\n            inset 0 0 0 1px rgba(255, 255, 255, 0.1);\n    }\n\n    .vinyl-art {\n        position: absolute;\n        inset: 0;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        z-index: 1;\n    }\n\n    .vinyl-grooves {\n        position: absolute;\n        inset: 0;\n        mix-blend-mode: multiply;\n        z-index: 2;\n        pointer-events: none;\n        opacity: 1;\n    }\n\n    .vinyl-center {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: 20%;\n        height: 20%;\n        border-radius: 50%;\n        z-index: 4;\n        box-shadow: \n            0 0 0 2px rgba(255, 255, 255, 0.1),\n            inset 0 0 0 2px rgba(0, 0, 0, 0.4);\n    }\n\n    .vinyl-center::after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: 15%;\n        height: 15%;\n        background: rgb(226, 232, 240);\n        border-radius: 50%;\n        box-shadow: inset 0 0 2px rgba(255, 255, 255, 0.2);\n    }\n\n    .selection-overlay {\n        position: absolute;\n        inset: 0;\n        border-radius: 50%;\n        z-index: 3;\n        box-shadow: inset 0 0 20px var(--color-primary-alpha, rgba(244, 63, 94, 0.4));\n    }\n\n    .heart-badge {\n        position: absolute;\n        width: 3.6rem;\n        height: 3.6rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: var(--z-overlay, 30);\n        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));\n        pointer-events: none;\n    }\n\n    .heart-badge.image-badge {\n        top: -0.4rem;\n        left: -0.4rem;\n        animation: noRotate var(--duration-slow, 8s) linear infinite reverse;\n    }\n\n    .heart-badge.container-badge {\n        top: -1rem;\n        left: -1rem;\n    }\n\n    @keyframes noRotate {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n    }\n\n    .heart-icon {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n    }\n\n    .heart-number {\n        position: relative;\n        color: var(--text-light, white);\n        font-weight: bold;\n        font-size: 1.25rem;\n        z-index: 11;\n        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);\n    }\n</style>"
    },
    {
      "file": "src/lib/styles/theme.css",
      "action": "update",
      "content": "/* Taylor Swift Fan App Theme */\n:root {\n    /* Viewport and Container */\n    --breakpoint-sm: 640px;\n    --breakpoint-md: 768px;\n    --breakpoint-lg: 1024px;\n    --breakpoint-xl: 1280px;\n\n    /* Container Sizes */\n    --container-sm: calc(100vh - 120px);\n    --container-md: calc(100vh - 80px);\n    --container-lg: calc(100vh - 40px);\n    --container-max-width: 448px;\n\n    /* Dynamic Spacing */\n    --dynamic-spacing-xs: clamp(0.25rem, 1vh, 0.5rem);\n    --dynamic-spacing-sm: clamp(0.5rem, 1.5vh, 0.75rem);\n    --dynamic-spacing-md: clamp(0.75rem, 2vh, 1rem);\n    --dynamic-spacing-lg: clamp(1rem, 2.5vh, 1.5rem);\n\n    /* Component Sizing */\n    --header-height: clamp(74px, 12vh, 96px);\n    --footer-height: clamp(74px, 12vh, 96px);\n    --content-height: calc(100vh - var(--header-height) - var(--footer-height));\n    \n    /* Grid System */\n    --grid-gap-sm: clamp(0.5rem, 2vw, 1rem);\n    --grid-gap-md: clamp(1rem, 3vw, 1.5rem);\n    --grid-gap-lg: clamp(1.5rem, 4vw, 2rem);\n\n    /* Colors */\n    --color-primary: rgb(244, 63, 94);\n    --color-primary-light: rgb(255, 107, 139);\n    --color-primary-dark: rgb(219, 39, 70);\n    --color-primary-alpha: rgba(244, 63, 94, 0.4);\n    \n    /* Background Colors */\n    --bg-gradient-start: rgb(255, 241, 242);\n    --bg-gradient-end: rgb(254, 205, 211);\n    --bg-container: rgb(226, 232, 240);\n    --bg-overlay: rgba(255, 255, 255, 0.6);\n    --bg-header: rgba(255, 241, 242, 0.8);\n    \n    /* Text Colors */\n    --text-primary: #881337;\n    --text-secondary: #9f1239;\n    --text-light: #ffffff;\n    --text-dark: #1f2937;\n    \n    /* Spacing Scale */\n    --space-1: 0.25rem;\n    --space-2: 0.5rem;\n    --space-3: 0.75rem;\n    --space-4: 1rem;\n    --space-6: 1.5rem;\n    --space-8: 2rem;\n    --space-12: 3rem;\n    --space-16: 4rem;\n    \n    /* Component Spacing */\n    --spacing-header: var(--dynamic-spacing-md);\n    --spacing-footer: var(--dynamic-spacing-md);\n    --spacing-content: var(--dynamic-spacing-md);\n    --spacing-button: var(--dynamic-spacing-sm);\n    --spacing-card: var(--dynamic-spacing-md);\n    --spacing-input: var(--dynamic-spacing-md);\n    \n    /* Border Radius */\n    --radius-sm: 0.25rem;\n    --radius-md: 0.5rem;\n    --radius-lg: 1rem;\n    --radius-full: 9999px;\n    --radius-button: var(--radius-md);\n    --radius-container: var(--radius-lg);\n    --radius-card: var(--radius-lg);\n    --radius-badge: var(--radius-full);\n    \n    /* Effects */\n    --shadow-sm: 0 2px 8px;\n    --shadow-md: 0 4px 12px;\n    --shadow-lg: 0 8px 24px;\n    --shadow-primary: var(--shadow-sm) var(--color-primary-alpha);\n    \n    /* Z-index Layers */\n    --z-header: 10;\n    --z-content: 1;\n    --z-footer: 10;\n    --z-overlay: 20;\n    --z-tooltip: 30;\n    --z-modal: 40;\n    \n    /* Backdrop Filters */\n    --blur-sm: blur(4px);\n    --blur-md: blur(8px);\n    --blur-lg: blur(16px);\n    \n    /* Animation */\n    --duration-fast: 0.3s;\n    --duration-medium: 0.8s;\n    --duration-slow: 2s;\n    --timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    \n    /* Scrollbar Colors */\n    --scrollbar-track: rgba(244, 63, 94, 0.05);\n    --scrollbar-thumb: rgba(244, 63, 94, 0.2);\n    --scrollbar-thumb-hover: rgba(244, 63, 94, 0.3);\n    --scrollbar-width: 8px;\n    --scrollbar-height: 8px;\n}\n\n/* Global Animations */\n@keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.05); }\n    100% { transform: scale(1); }\n}\n\n@keyframes shimmer {\n    0% { transform: translateX(-100%); }\n    100% { transform: translateX(100%); }\n}\n\n@keyframes rotate {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n}\n\n@keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n@keyframes slideIn {\n    from { transform: translateY(20px); opacity: 0; }\n    to { transform: translateY(0); opacity: 1; }\n}\n\n/* Animation Utilities */\n.subtle-shimmer {\n    position: relative;\n    overflow: hidden;\n}\n\n.subtle-shimmer::after {\n    content: '';\n    position: absolute;\n    inset: 0;\n    background: linear-gradient(\n        110deg,\n        rgba(255,255,255,0) 0%,\n        rgba(255,255,255,0.3) 50%,\n        rgba(255,255,255,0) 100%\n    );\n    transform: translateX(-100%);\n    animation: shimmer 2s infinite;\n}\n\n/* Custom Scrollbar */\n.scrollbar-taylor {\n    scrollbar-width: thin;\n    scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-track);\n}\n\n.scrollbar-taylor::-webkit-scrollbar {\n    width: var(--scrollbar-width);\n    height: var(--scrollbar-height);\n}\n\n.scrollbar-taylor::-webkit-scrollbar-track {\n    background: var(--scrollbar-track);\n    border-radius: var(--radius-full);\n}\n\n.scrollbar-taylor::-webkit-scrollbar-thumb {\n    background: var(--scrollbar-thumb);\n    border-radius: var(--radius-full);\n    transition: background var(--duration-fast) var(--timing-function);\n}\n\n.scrollbar-taylor::-webkit-scrollbar-thumb:hover {\n    background: var(--scrollbar-thumb-hover);\n}\n\n/* Hide scrollbar but keep functionality */\n.scrollbar-hidden {\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n}\n\n.scrollbar-hidden::-webkit-scrollbar {\n    display: none;\n}\n"
    }
  ]
}