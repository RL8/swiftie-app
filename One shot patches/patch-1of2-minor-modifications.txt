{
  "patches": [
    {
      "file": "src/routes/+layout.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import '../app.css';\n    import { page } from '$app/stores';\n    import { setContext } from 'svelte';\n    import { createMusicContext } from '$lib/context/music.svelte';\n    import { createAppContext } from '$lib/context/app.svelte';\n    import BottomNav from '$lib/components/BottomNav.svelte';\n    import StandardLayout from '$lib/components/layout/StandardLayout.svelte';\n\n    interface Props {\n        children?: import('svelte').Snippet;\n    }\n\n    let { children }: Props = $props();\n\n    // Create and provide contexts\n    const musicContext = createMusicContext();\n    const appContext = createAppContext();\n    setContext('music', () => musicContext);\n    setContext('app', () => appContext);\n\n    // Determine if bottom nav should be shown\n    $: showBottomNav = appContext.isOrientationComplete() && \n        !['/albums', '/auth'].some(path => $page.url.pathname.startsWith(path));\n</script>\n\n<StandardLayout>\n    <div class:pb-16={showBottomNav}>\n        {@render children?.()}\n    </div>\n    {#if showBottomNav}\n        <BottomNav />\n    {/if}\n</StandardLayout>\n\n<style>\n    :global(html) {\n        background-color: rgb(226, 232, 240);\n        height: 100%;\n    }\n\n    :global(body) {\n        height: 100%;\n        margin: 0;\n        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n</style>"
    },
    {
      "file": "src/lib/context/app.svelte.ts",
      "action": "create",
      "content": "import type { UserProfile } from '$lib/types/components';\n\nexport function createAppContext() {\n    // App-wide state management\n    const orientationCompleted = $state(false);\n    const currentUser = $state<UserProfile | null>(null);\n\n    // Methods for managing app state\n    function completeOrientation() {\n        orientationCompleted = true;\n    }\n\n    function isOrientationComplete() {\n        return orientationCompleted;\n    }\n\n    function setUser(user: UserProfile | null) {\n        currentUser = user;\n    }\n\n    function clearUser() {\n        currentUser = null;\n    }\n\n    return {\n        completeOrientation,\n        isOrientationComplete,\n        setUser,\n        clearUser,\n        get user() { return currentUser }\n    };\n}"
    },
    {
      "file": "src/lib/components/BottomNav.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import { page } from '$app/stores';\n    import { base } from '$app/paths';\n    import { getContext } from 'svelte';\n    import type { AppContext } from '$lib/types/components';\n    \n    const navItems = [\n        { \n            path: `${base}/feed`, \n            label: 'Feed', \n            icon: 'üéµ',\n            svgPath: '<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\"/>'\n        },\n        { \n            path: `${base}/swiftivities`, \n            label: 'Swiftivities', \n            icon: 'üé∏',\n            svgPath: '<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"/><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>'\n        },\n        { \n            path: `${base}/profile`, \n            label: 'Profile', \n            icon: 'üë§',\n            svgPath: '<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"/>'\n        },\n        { \n            path: `${base}/about`, \n            label: 'About', \n            icon: '‚ùì',\n            svgPath: '<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>'\n        }\n    ];\n\n    let currentPath = $derived($page.url.pathname);\n    let currentPathWithoutBase = $derived(currentPath.replace(base, ''));\n</script>\n\n<nav class=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 py-2 px-4\">\n    <div class=\"max-w-md mx-auto flex justify-around items-center\">\n        {#each navItems as { path, label, svgPath }}\n            <a \n                href={path} \n                class=\"flex flex-col items-center p-2 {currentPathWithoutBase === path.replace(base, '') ? 'text-rose-600' : 'text-gray-600'}\"\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    {@html svgPath}\n                </svg>\n                <span class=\"text-xs mt-1\">{label}</span>\n            </a>\n        {/each}\n    </div>\n</nav>"
    },
    {
      "file": "src/routes/feed/+page.svelte",
      "action": "create",
      "content": "<script lang=\"ts\">\n    import StandardLayout from '$lib/components/layout/StandardLayout.svelte';\n    import Header from '$lib/components/layout/Header.svelte';\n    import { getContext } from 'svelte';\n    import type { AppContext } from '$lib/types/components';\n\n    const app = getContext<() => AppContext>('app')();\n\n    // Placeholder for future pull-to-refresh and activity stream logic\n    let activities = $state([\n        { id: 1, type: 'list_update', description: 'Updated Top 3 Albums', timestamp: new Date() },\n        { id: 2, type: 'swiftivity', description: 'Completed Lyric Challenge', timestamp: new Date() }\n    ]);\n</script>\n\n<StandardLayout>\n    {#snippet header()}\n        <Header \n            title=\"Swift Feed\"\n            subtitle=\"Your Taylor Swift Moments\" />\n    {/snippet}\n\n    {#snippet main()}\n        <main class=\"container-responsive\">\n            <div class=\"space-y-4 p-4\">\n                {#each activities as activity}\n                    <div class=\"bg-white/60 backdrop-blur-sm rounded-xl p-4 shadow-md\">\n                        <div class=\"flex items-center space-x-3\">\n                            <div class=\"flex-shrink-0\">\n                                <span class=\"text-2xl\">{activity.type === 'list_update' ? 'üìù' : 'üéµ'}</span>\n                            </div>\n                            <div>\n                                <p class=\"text-rose-800 font-medium\">{activity.description}</p>\n                                <p class=\"text-xs text-rose-600\">{activity.timestamp.toLocaleString()}</p>\n                            </div>\n                        </div>\n                    </div>\n                {/each}\n            </div>\n        </main>\n    {/snippet}\n</StandardLayout>"
    },
    {
      "file": "src/routes/swiftivities/+page.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import StandardLayout from '$lib/components/layout/StandardLayout.svelte';\n    import Header from '$lib/components/layout/Header.svelte';\n    import Button from '$lib/components/Button/Button.svelte';\n\n    const swiftivityTypes = [\n        {\n            id: 'list_keeper',\n            title: 'List Keeper',\n            description: 'Create and manage your ultimate Taylor Swift lists',\n            icon: 'üìã'\n        },\n        {\n            id: 'musings',\n            title: 'Musings',\n            description: 'Explore deep thoughts and reflections about Taylor\\'s music',\n            icon: 'üí≠'\n        },\n        {\n            id: 'besties',\n            title: 'Besties',\n            description: 'Connect with fellow Swifties and share experiences',\n            icon: 'üëØ'\n        },\n        {\n            id: 'frenemies',\n            title: 'Frenemies',\n            description: 'Playful debates and friendly competitions',\n            icon: 'ü§º'\n        }\n    ];\n\n    function startSwiftivity(type: string) {\n        // TODO: Implement specific swiftivity start logic\n        console.log(`Starting ${type} swiftivity`);\n    }\n</script>\n\n<StandardLayout>\n    {#snippet header()}\n        <Header \n            title=\"Swiftivities\"\n            subtitle=\"Taylor Swift Interactive Experiences\" />\n    {/snippet}\n\n    {#snippet main()}\n        <main class=\"container-responsive\">\n            <div class=\"grid-responsive gap-dynamic\">\n                {#each swiftivityTypes as activity}\n                    <div class=\"game-card\">\n                        <div class=\"game-content\">\n                            <div class=\"game-icon\">{activity.icon}</div>\n                            <div class=\"game-info\">\n                                <h3>{activity.title}</h3>\n                                <p>{activity.description}</p>\n                            </div>\n                        </div>\n                        <Button \n                            variant=\"secondary\"\n                            size=\"compact\"\n                            fullWidth={true}\n                            on:click={() => startSwiftivity(activity.id)}\n                        >\n                            Start {activity.title}\n                        </Button>\n                    </div>\n                {/each}\n            </div>\n        </main>\n    {/snippet}\n</StandardLayout>"
    },
    {
      "file": "src/routes/about/+page.svelte",
      "action": "create",
      "content": "<script lang=\"ts\">\n    import StandardLayout from '$lib/components/layout/StandardLayout.svelte';\n    import Header from '$lib/components/layout/Header.svelte';\n    import Button from '$lib/components/Button/Button.svelte';\n\n    let formData = $state({\n        name: '',\n        email: '',\n        message: ''\n    });\n\n    let showConfirmation = $state(false);\n\n    function handleSubmit() {\n        // TODO: Implement actual form submission logic\n        console.log('Form submitted', formData);\n        showConfirmation = true;\n    }\n</script>\n\n<StandardLayout>\n    {#snippet header()}\n        <Header \n            title=\"About Swift Connect\"\n            subtitle=\"Connecting Swifties Around the World\" />\n    {/snippet}\n\n    {#snippet main()}\n        <div class=\"container mx-auto px-4 py-8\">\n            <section class=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-md mb-6\">\n                <h2 class=\"text-2xl font-bold text-rose-800 mb-4\">Our Story</h2>\n                <p class=\"text-rose-600\">\n                    Swift Connect was born from a deep love for Taylor Swift's music and the incredible community \n                    she has built. Our mission is to create a digital space where Swifties can connect, \n                    celebrate, and dive deep into the world of Taylor Swift.\n                </p>\n            </section>\n\n            <section class=\"bg-white/60 backdrop-blur-sm rounded-xl p-6 shadow-md\">\n                <h2 class=\"text-2xl font-bold text-rose-800 mb-4\">Contact Us</h2>\n                {#if !showConfirmation}\n                    <form on:submit|preventDefault={handleSubmit} class=\"space-y-4\">\n                        <div>\n                            <label for=\"name\" class=\"block text-rose-700 mb-2\">Name</label>\n                            <input \n                                type=\"text\" \n                                id=\"name\" \n                                bind:value={formData.name} \n                                required \n                                class=\"w-full px-3 py-2 border border-rose-300 rounded-md focus:outline-none focus:ring-2 focus:ring-rose-500\"\n                            />\n                        </div>\n                        <div>\n                            <label for=\"email\" class=\"block text-rose-700 mb-2\">Email</label>\n                            <input \n                                type=\"email\" \n                                id=\"email\" \n                                bind:value={formData.email} \n                                required \n                                class=\"w-full px-3 py-2 border border-rose-300 rounded-md focus:outline-none focus:ring-2 focus:ring-rose-500\"\n                            />\n                        </div>\n                        <div>\n                            <label for=\"message\" class=\"block text-rose-700 mb-2\">Message</label>\n                            <textarea \n                                