{
  "patches": [
    {
      "file": "src/lib/components/AlbumCard.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n    import type { MusicContext } from '$lib/context/music.svelte';\n    import type { Album } from '$lib/types';\n\n    const music = getContext<MusicContext>('music');\n\n    interface Props {\n        album: Album;\n        index: number;\n        onClick?: () => void;\n        showBorder?: boolean;\n    }\n\n    let {\n        album,\n        index,\n        onClick = () => {},\n        showBorder = true\n    }: Props = $props();\n\n    let isSelected = $derived(music.selectedAlbums.some(a => a.id === album.id));\n    let selectionIndex = $derived(music.selectedAlbums.findIndex(a => a.id === album.id) + 1);\n</script>\n\n<button\n    class=\"album-card\"\n    class:selected={isSelected}\n    class:show-border={showBorder}\n    style=\"animation-delay: {index * 50}ms\"\n    onclick={onClick}\n>\n    <div class=\"album-content\">\n        <img\n            src={album.coverArt}\n            alt={album.title}\n            class=\"w-full h-full object-cover\"\n        />\n        {#if isSelected}\n            <div class=\"selection-overlay\">\n                <span class=\"text-4xl font-bold text-white\">{selectionIndex}</span>\n            </div>\n        {/if}\n    </div>\n</button>\n\n<style>\n    .album-card {\n        position: relative;\n        width: 100%;\n        aspect-ratio: 1;\n        cursor: pointer;\n        transition: transform var(--duration-fast, 0.2s), box-shadow var(--duration-fast, 0.2s);\n    }\n\n    .album-card:hover {\n        transform: translateY(-0.25rem);\n    }\n\n    .album-content {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        background: white;\n        border-radius: var(--radius-md, 0.5rem);\n        overflow: hidden;\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n    }\n\n    .selection-overlay {\n        position: absolute;\n        inset: 0;\n        background: var(--color-primary-alpha, rgba(244, 63, 94, 0.5));\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .album-card.selected {\n        box-shadow: 0 0 0 2px var(--color-primary, rgb(244, 63, 94));\n        transform: translateY(-0.25rem);\n    }\n</style>"
    },
    {
      "file": "src/routes/albums/+page.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n    import type { MusicContext } from '$lib/context/music.svelte';\n    import { goto } from '$app/navigation';\n    import { base } from '$app/paths';\n    import StandardLayout from '$lib/components/layout/StandardLayout.svelte';\n    import Header from '$lib/components/layout/Header.svelte';\n    import Footer from '$lib/components/layout/Footer.svelte';\n    import Button from '$lib/components/Button/Button.svelte';\n    import VinylRecord from '$lib/components/music/VinylRecord.svelte';\n    \n    const music = getContext<() => MusicContext>('music')();\n    \n    function handleAlbumClick(album: typeof music.albums[0]) {\n        if (music.selectedAlbums.some(a => a.id === album.id)) {\n            music.removeAlbum(album.id);\n        } else if (music.selectedAlbums.length < 3) {\n            music.selectAlbum(album);\n        }\n    }\n    \n    function handleContinue() {\n        if (music.selectedAlbums.length === 3) {\n            goto(`${base}/albums/confirm`);\n        }\n    }\n</script>\n\n<StandardLayout>\n    {#snippet header()}\n        <Header \n            variant=\"progress\"\n            title=\"Pick Your Top 3\"\n            subtitle=\"Choose your favorite Taylor Swift albums\"\n            progress={music.selectedAlbums.length}\n            maxProgress={3} />\n    {/snippet}\n\n    {#snippet main()}\n        <main class=\"flex flex-col items-center justify-center h-full p-4\">\n            <div class=\"album-grid\">\n                {#each music.albums as album}\n                    {@const isSelected = music.selectedAlbums.some(a => a.id === album.id)}\n                    {@const selectionIndex = music.selectedAlbums.findIndex(a => a.id === album.id)}\n                    <div class=\"album-wrapper\">\n                        <VinylRecord\n                            coverArt={album.coverArt}\n                            title={album.title}\n                            selected={isSelected}\n                            selectionNumber={isSelected ? selectionIndex + 1 : null}\n                            badgePosition=\"image\"\n                            showSelectionOverlay={true}\n                            showGrooves={true}\n                            on:click={() => handleAlbumClick(album)}\n                        />\n                    </div>\n                {/each}\n            </div>\n        </main>\n    {/snippet}\n\n    {#snippet footer()}\n        <Footer variant=\"button\" >\n            <Button \n                variant=\"primary\"\n                disabled={music.selectedAlbums.length < 3}\n                on:click={handleContinue}\n            >\n                Continue\n            </Button>\n        </Footer>\n    {/snippet}\n</StandardLayout>\n\n<style>\n    .album-grid {\n        display: grid;\n        grid-template-columns: repeat(3, 1fr);\n        gap: var(--grid-gap-sm, 0.5rem);\n        width: 100%;\n        max-width: 100%;\n        min-width: 16rem;\n        margin: 0 auto;\n    }\n\n    .album-wrapper {\n        width: 100%;\n        height: 100%;\n    }\n</style>"
    },
    {
      "file": "src/routes/albums/confirm/+page.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n    import type { MusicContext } from '$lib/context/music.svelte';\n    import { goto } from '$app/navigation';\n    import { base } from '$app/paths';\n    import { onMount } from 'svelte';\n    import confetti from 'canvas-confetti';\n    import Header from '$lib/components/layout/Header.svelte';\n    import Footer from '$lib/components/layout/Footer.svelte';\n    import Button from '$lib/components/Button/Button.svelte';\n    import StandardLayout from '$lib/components/layout/StandardLayout.svelte';\n    import VinylRecord from '$lib/components/music/VinylRecord.svelte';\n\n    const music = getContext<() => MusicContext>('music')();\n\n    function handleEdit() {\n        goto(`${base}/albums`);\n    }\n    \n    function handleContinue() {\n        if (music.selectedAlbums.length === 3) {\n            goto(`${base}/albums/songs`);\n        }\n    }\n\n    function vibrate() {\n        if (navigator.vibrate) {\n            navigator.vibrate(50);\n        }\n    }\n\n    let mounted = $state(false);\n    let showAlbum3 = $state(false);\n    let showAlbum2 = $state(false);\n    let showAlbum1 = $state(false);\n\n    onMount(() => {\n        mounted = true;\n        \n        // Start animation sequence after a short delay\n        setTimeout(() => {\n            showAlbum3 = true;\n            \n            setTimeout(() => {\n                showAlbum2 = true;\n                \n                setTimeout(() => {\n                    showAlbum1 = true;\n                    // Trigger confetti when album 1 appears\n                    confetti({\n                        particleCount: 150,\n                        spread: 100,\n                        origin: { x: 0.5, y: 0.5 },\n                        colors: ['#FFB6C1', '#FF69B4', '#FF1493'],\n                        disableForReducedMotion: true\n                    });\n                }, 600);\n            }, 600);\n        }, 300);\n    });\n</script>\n\n<StandardLayout>\n    {#snippet header()}\n        <Header\n            title=\"Amazing Choices! ðŸŽ‰\"\n            subtitle=\"Your top 3 Taylor Swift albums\" />\n    {/snippet}\n\n    <div class=\"flex-1 p-6\">\n        <div class=\"vinyl-container mx-auto\">\n            {#if mounted}\n                {#if showAlbum3}\n                    <div class=\"vinyl-card vinyl-3\"\n                        ontouchstart={vibrate}>\n                        <div class=\"vinyl-content\">\n                            <span class=\"rank-number\" style=\"color: {music.selectedAlbums[2].color}\">3</span>\n                            <VinylRecord\n                                coverArt={music.selectedAlbums[2].coverArt}\n                                title={music.selectedAlbums[2].title}\n                                selected={true}\n                                selectionNumber={3}\n                                badgePosition=\"none\"\n                                showSelectionOverlay={false}\n                                showGrooves={true}\n                                class_=\"confirm-vinyl\"\n                            />\n                        </div>\n                    </div>\n                {/if}\n                \n                {#if showAlbum2}\n                    <div class=\"vinyl-card vinyl-2\"\n                        ontouchstart={vibrate}>\n                        <div class=\"vinyl-content\">\n                            <span class=\"rank-number\" style=\"color: {music.selectedAlbums[1].color}\">2</span>\n                            <VinylRecord\n                                coverArt={music.selectedAlbums[1].coverArt}\n                                title={music.selectedAlbums[1].title}\n                                selected={true}\n                                selectionNumber={2}\n                                badgePosition=\"none\"\n                                showSelectionOverlay={false}\n                                showGrooves={true}\n                                class_=\"confirm-vinyl\"\n                            />\n                        </div>\n                    </div>\n                {/if}\n                \n                {#if showAlbum1}\n                    <div class=\"vinyl-card vinyl-1\"\n                        ontouchstart={vibrate}>\n                        <div class=\"vinyl-content\">\n                            <span class=\"rank-number\" style=\"color: {music.selectedAlbums[0].color}\">1</span>\n                            <VinylRecord\n                                coverArt={music.selectedAlbums[0].coverArt}\n                                title={music.selectedAlbums[0].title}\n                                selected={true}\n                                selectionNumber={1}\n                                badgePosition=\"none\"\n                                showSelectionOverlay={false}\n                                showGrooves={true}\n                                class_=\"confirm-vinyl\"\n                            />\n                        </div>\n                    </div>\n                {/if}\n            {/if}\n        </div>\n    </div>\n\n    {#snippet footer()}\n        <Footer variant=\"button\" >\n            {#if mounted}\n                <Button \n                    variant=\"secondary\"\n                    on:click={handleEdit}\n                    fullWidth={true}>\n                    Edit Selection\n                </Button>\n                <Button \n                    variant=\"primary\"\n                    on:click={handleContinue}\n                    fullWidth={true}>\n                    Continue to Songs\n                </Button>\n            {/if}\n        </Footer>\n    {/snippet}\n</StandardLayout>\n\n<style>\n    .vinyl-container {\n        position: relative;\n        width: 288px;\n        height: 488px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .vinyl-card {\n        position: absolute;\n        left: 0;\n        transition: transform var(--duration-fast, 0.3s) var(--timing-function, cubic-bezier(0.4, 0, 0.2, 1));\n    }\n\n    .vinyl-1 {\n        top: 0;\n        z-index: 3;\n        animation: slideInOne var(--duration-medium, 0.8s) var(--timing-function, cubic-bezier(0.4, 0, 0.2, 1));\n    }\n\n    .vinyl-2 {\n        top: 140px;\n        left: 40px;\n        z-index: 2;\n        animation: slideInTwo var(--duration-medium, 0.8s) var(--timing-function, cubic-bezier(0.4, 0, 0.2, 1));\n    }\n\n    .vinyl-3 {\n        top: 280px;\n        left: 80px;\n        z-index: 1;\n        animation: slideInThree var(--duration-medium, 0.8s) var(--timing-function, cubic-bezier(0.4, 0, 0.2, 1));\n    }\n\n    @keyframes slideInOne {\n        from {\n            opacity: 0;\n            transform: translate(-100%, 0) rotate(-15deg);\n        }\n        to {\n            opacity: 1;\n            transform: translate(0, 0);\n        }\n    }\n\n    @keyframes slideInTwo {\n        from {\n            opacity: 0;\n            transform: translate(-100%, 0) rotate(-15deg);\n        }\n        to {\n            opacity: 1;\n            transform: translate(0, 0);\n        }\n    }\n\n    @keyframes slideInThree {\n        from {\n            opacity: 0;\n            transform: translate(-100%, 0) rotate(-15deg);\n        }\n        to {\n            opacity: 1;\n            transform: translate(0, 0);\n        }\n    }\n\n    .vinyl-content {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .rank-number {\n        position: absolute;\n        left: -4rem;\n        font-size: 4rem;\n        font-weight: 800;\n        line-height: 1;\n        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3),\n                     0 0 20px currentColor;\n        font-family: 'Playfair Display', serif;\n        letter-spacing: -0.02em;\n    }\n\n    :global(.confirm-vinyl) {\n        width: 13rem;\n        height: 13rem;\n    }\n</style>"
    }
  ]
}