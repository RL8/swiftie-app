{
  "patches": [
    {
      "file": "src/lib/components/layout/Header.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import type { HeaderProps } from '$lib/types/components';\n    \n    interface Props {\n        variant?: HeaderProps['variant'];\n        title: string;\n        subtitle?: string | undefined;\n        progress?: number | undefined;\n        maxProgress?: number | undefined;\n        left?: import('svelte').Snippet;\n    }\n\n    let {\n        variant = 'base',\n        title,\n        subtitle = undefined,\n        progress = undefined,\n        maxProgress = undefined,\n        left\n    }: Props = $props();\n</script>\n\n<div class=\"header {variant}\">\n    {#if variant === \"progress\"}\n        <div class=\"progress-header\">\n            <div class=\"left-content\">\n                {@render left?.()}\n            </div>\n            <div class=\"center-content\">\n                <h1>{title}</h1>\n                {#if subtitle}\n                    <p>{subtitle}</p>\n                {/if}\n                <div class=\"progress-dots\">\n                    {#each Array(maxProgress) as _, i}\n                        <div class=\"dot\" class:active={i < progress}></div>\n                    {/each}\n                </div>\n            </div>\n            <div class=\"right-content\">\n                <!-- Reserved for future use -->\n            </div>\n        </div>\n    {:else}\n        <h1>{title}</h1>\n        {#if subtitle}\n            <p>{subtitle}</p>\n        {/if}\n    {/if}\n</div>\n\n<style>\n    .header {\n        padding: var(--spacing-header, 1rem);\n        text-align: center;\n        background: rgba(255, 255, 255, 0.05);\n        backdrop-filter: var(--blur-md, blur(10px));\n        border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    }\n\n    .progress-header {\n        display: grid;\n        grid-template-columns: auto 1fr auto;\n        gap: var(--grid-gap-sm, 1rem);\n        align-items: center;\n    }\n\n    .left-content, .right-content {\n        display: flex;\n        align-items: center;\n    }\n\n    .center-content {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        gap: var(--space-2, 0.5rem);\n    }\n\n    h1 {\n        font-size: 1.1rem;\n        font-weight: 600;\n        margin: 0;\n        color: var(--text-primary, #881337);\n    }\n\n    p {\n        font-size: 0.9rem;\n        color: var(--text-secondary, #9f1239);\n        margin: 0;\n    }\n\n    .progress-dots {\n        display: flex;\n        gap: var(--space-2, 0.5rem);\n        margin-top: var(--space-1, 0.25rem);\n    }\n\n    .dot {\n        width: 0.5rem;\n        height: 0.5rem;\n        border-radius: 50%;\n        background: rgba(255, 255, 255, 0.2);\n        transition: all var(--duration-fast, 0.3s) var(--timing-function, ease-out);\n    }\n\n    .dot.active {\n        background: var(--color-primary, rgb(244, 63, 94));\n    }\n</style>"
    },
    {
      "file": "src/lib/components/layout/Footer.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import type { FooterProps } from '$lib/types/components';\n    \n    interface Props {\n        variant?: FooterProps['variant'];\n        hasBorder?: FooterProps['hasBorder'];\n        children?: import('svelte').Snippet;\n    }\n\n    let { variant = 'base', hasBorder = true, children }: Props = $props();\n</script>\n\n<footer class=\"footer\" class:with-border={hasBorder}>\n    <div class=\"footer-content\" class:footer-button={variant === 'button'}>\n        {@render children?.()}\n    </div>\n</footer>\n\n<style>\n    .footer {\n        padding: var(--spacing-footer);\n        background: var(--bg-header);\n        backdrop-filter: var(--blur-sm);\n        border-top: 1px solid rgba(255, 255, 255, 0.1);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        min-height: var(--footer-height);\n    }\n\n    .with-border {\n        border-top: 1px solid var(--bg-gradient-end, rgb(254 205 211));\n    }\n\n    .footer-content {\n        width: 100%;\n        max-width: var(--container-max-width);\n        display: flex;\n        justify-content: center;\n        gap: var(--dynamic-spacing-sm);\n    }\n\n    .footer-button {\n        padding: 0 var(--spacing-footer);\n    }\n\n    .footer-button :global(button) {\n        height: calc(var(--footer-height) - (2 * var(--spacing-footer)));\n        min-height: unset;\n        min-width: 12rem;\n    }\n</style>"
    },
    {
      "file": "src/lib/components/BottomNav.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import { page } from '$app/stores';\n    import { base } from '$app/paths';\n    \n    const navItems = [\n        { path: `${base}/`, label: 'Home', icon: 'üè†' },\n        { path: `${base}/games`, label: 'Games', icon: 'üéÆ' },\n        { path: `${base}/profile`, label: 'Profile', icon: 'üë§' }\n    ];\n\n    let currentPath = $derived($page.url.pathname);\n    let currentPathWithoutBase = $derived(currentPath.replace(base, ''));\n</script>\n\n<nav class=\"bottom-nav\">\n    <div class=\"nav-items\">\n        {#each navItems as { path, label, icon }}\n            <a \n                href={path} \n                class=\"nav-item {currentPathWithoutBase === path.replace(base, '') ? 'active' : ''}\"\n                data-sveltekit-preload-data=\"hover\"\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    {#if path === `${base}/`}\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n                    {:else if path === `${base}/games`}\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    {:else if path === `${base}/profile`}\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    {/if}\n                </svg>\n                <span class=\"nav-label\">{label}</span>\n            </a>\n        {/each}\n    </div>\n</nav>\n\n<style>\n    .bottom-nav {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: white;\n        border-top: 1px solid var(--bg-gradient-end, rgb(254, 205, 211));\n        height: var(--footer-height, 4rem);\n        max-width: var(--container-max-width, 448px);\n        margin: 0 auto;\n        z-index: var(--z-footer, 10);\n    }\n\n    .nav-items {\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        height: 100%;\n        padding: 0 var(--spacing-footer, 1rem);\n    }\n\n    .nav-item {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        color: var(--text-secondary, rgb(156, 163, 175));\n        text-decoration: none;\n        transition: color var(--duration-fast, 0.2s) var(--timing-function, ease-out);\n        position: relative;\n        padding: var(--space-2, 0.5rem);\n    }\n\n    .nav-item:before {\n        content: '';\n        position: absolute;\n        inset: 0;\n        border-radius: var(--radius-full, 9999px);\n        background: currentColor;\n        opacity: 0;\n        transition: opacity var(--duration-fast, 0.2s) var(--timing-function, ease-out);\n    }\n\n    .nav-item:active:before {\n        opacity: 0.1;\n    }\n\n    .nav-item.active {\n        color: var(--color-primary, rgb(244, 63, 94));\n    }\n\n    .nav-label {\n        font-size: 0.75rem;\n        margin-top: var(--space-1, 0.25rem);\n    }\n</style>"
    }
  ]
}