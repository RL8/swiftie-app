{
  "patches": [
    {
      "file": "src/routes/albums/songs/+page.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n    import type { MusicContext } from '$lib/context/music.svelte';\n    import { goto } from '$app/navigation';\n    import { base } from '$app/paths';\n    import StandardLayout from '$lib/components/layout/StandardLayout.svelte';\n    import Header from '$lib/components/layout/Header.svelte';\n    import Footer from '$lib/components/layout/Footer.svelte';\n    import Button from '$lib/components/Button/Button.svelte';\n    import { fade } from 'svelte/transition';\n    import { tapAnimation } from '$lib/actions/tapAnimation';\n    \n    const music = getContext<() => MusicContext>('music')();\n    let currentSongSelections = $state<string[]>([]);\n    let currentAlbumIndex = $state(0);\n    \n    // Get the current album based on index\n    const currentAlbum = $derived(music.selectedAlbums[currentAlbumIndex]);\n    \n    function handleSongSelect(songTitle: string) {\n        const songIndex = currentSongSelections.indexOf(songTitle);\n        if (songIndex !== -1) {\n            currentSongSelections = currentSongSelections.filter(s => s !== songTitle);\n        } else if (currentSongSelections.length < 3) {\n            currentSongSelections = [...currentSongSelections, songTitle];\n        }\n    }\n    \n    function handleBack() {\n        if (currentAlbumIndex > 0) {\n            currentAlbumIndex--;\n            currentSongSelections = music.selectedSongsByAlbum.get(music.selectedAlbums[currentAlbumIndex].id) || [];\n        } else {\n            goto(`${base}/albums/confirm`);\n        }\n    }\n    \n    function handleContinue() {\n        if (currentSongSelections.length === 3) {\n            // Store the current album's song selections\n            music.updateSelectedSongs(currentAlbum.id, currentSongSelections);\n            \n            if (currentAlbumIndex < 2) {\n                currentAlbumIndex++;\n                currentSongSelections = music.selectedSongsByAlbum.get(music.selectedAlbums[currentAlbumIndex].id) || [];\n            } else {\n                goto(`${base}/albums/results`);\n            }\n        }\n    }\n</script>\n\n<StandardLayout>\n    {#snippet header()}\n        <Header \n            variant=\"progress\"\n            title=\"Now, select your 3 top bangers from {currentAlbum?.title}\"\n            subtitle=\"Choose your favorite songs\"\n            progress={currentSongSelections.length}\n            maxProgress={3}>\n            \n            <!-- Selected Albums Stack in Header -->\n            {#snippet left()}\n                <div class=\"albums-stack\" >\n                    {#each music.selectedAlbums as album, i}\n                        <div \n                            class=\"selected-album\"\n                            class:active={i === currentAlbumIndex}\n                            style=\"transform: translate({i * -4}px, {i * -4}px)\">\n                            <div class=\"vinyl-mini\">\n                                <img\n                                    src={album.coverArt}\n                                    alt={album.title}\n                                    class=\"vinyl-art-mini\"\n                                />\n                                <div class=\"vinyl-grooves-mini\"></div>\n                                <div class=\"vinyl-center-mini\"></div>\n                                <div class=\"heart-badge-mini\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"heart-icon\">\n                                        <path d=\"M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z\" />\n                                    </svg>\n                                    <span class=\"heart-number-mini\">{i + 1}</span>\n                                </div>\n                            </div>\n                        </div>\n                    {/each}\n                </div>\n            {/snippet}\n        </Header>\n    {/snippet}\n\n    {#snippet main()}\n        <main class=\"flex flex-col items-center justify-start h-full p-4\">\n            <!-- Songs List -->\n            <div class=\"songs-container\" in:fade={{duration: 300}}>\n                {#each currentAlbum?.songs || [] as song, i}\n                    <button\n                        class=\"song-card\"\n                        class:selected={currentSongSelections.includes(song)}\n                        onclick={() => handleSongSelect(song)}\n                        use:tapAnimation\n                    >\n                        <div class=\"song-info\">\n                            <span class=\"song-number\" style=\"text-align: right;\">{i + 1}.</span>\n                            <span class=\"song-title\">{song}</span>\n                        </div>\n                        {#if currentSongSelections.includes(song)}\n                            <div class=\"heart-badge-song\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"heart-icon\">\n                                    <path d=\"M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z\" />\n                                </svg>\n                                <span class=\"heart-number-song\">{currentSongSelections.indexOf(song) + 1}</span>\n                            </div>\n                        {/if}\n                    </button>\n                {/each}\n            </div>\n        </main>\n    {/snippet}\n\n    {#snippet footer()}\n        <Footer variant=\"nav\" >\n            <Button variant=\"secondary\" on:click={handleBack}>\n                {currentAlbumIndex > 0 ? 'Previous Album' : 'Back'}\n            </Button>\n            <Button \n                variant=\"primary\"\n                disabled={currentSongSelections.length < 3}\n                on:click={handleContinue}\n            >\n                {currentAlbumIndex < 2 ? 'Next Album' : 'See Results'}\n            </Button>\n        </Footer>\n    {/snippet}\n</StandardLayout>\n\n<style>\n    .albums-stack {\n        position: relative;\n        width: 4rem;\n        height: 4rem;\n        margin-right: 1rem;\n    }\n\n    .selected-album {\n        position: absolute;\n        transition: all var(--duration-fast, 0.3s) var(--timing-function, ease-out);\n    }\n\n    .selected-album.active {\n        z-index: var(--z-overlay, 3);\n    }\n\n    .vinyl-mini {\n        width: 4rem;\n        height: 4rem;\n        position: relative;\n        border-radius: 50%;\n        background: #000;\n        overflow: hidden;\n        box-shadow: var(--shadow-sm, 0 2px 4px) rgba(0, 0, 0, 0.2);\n    }\n\n    .vinyl-art-mini {\n        position: absolute;\n        inset: 0;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        z-index: 1;\n    }\n\n    .vinyl-grooves-mini {\n        position: absolute;\n        inset: 0;\n        background: repeating-radial-gradient(\n            circle at center,\n            transparent 0,\n            transparent 2px,\n            rgba(255, 255, 255, 0.05) 2.5px,\n            rgba(0, 0, 0, 0.15) 3px\n        );\n        mix-blend-mode: overlay;\n        z-index: 2;\n        pointer-events: none;\n        opacity: 0.85;\n    }\n\n    .vinyl-center-mini {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: 20%;\n        height: 20%;\n        background: #000;\n        border-radius: 50%;\n        z-index: 3;\n    }\n\n    .heart-badge-mini {\n        position: absolute;\n        top: -0.3rem;\n        left: -0.3rem;\n        width: 1.8rem;\n        height: 1.8rem;\n        color: var(--color-primary, rgb(244, 63, 94));\n        z-index: 10;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .heart-number-mini {\n        position: absolute;\n        color: var(--text-light, white);\n        font-size: 0.8rem;\n        font-weight: bold;\n    }\n\n    .songs-container {\n        display: flex;\n        flex-direction: column;\n        gap: var(--space-1, 0.2rem);\n        padding: var(--space-1, 0.2rem);\n        width: 100%;\n        max-width: var(--container-max-width);\n    }\n\n    .song-card {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0.3rem 0.5rem;\n        background: rgba(255, 255, 255, 0.1);\n        border-radius: var(--radius-md, 0.5rem);\n        transition: all var(--duration-fast, 0.2s) var(--timing-function, ease-out);\n        backdrop-filter: var(--blur-md, blur(8px));\n        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1),\n                   0 1px 2px rgba(0, 0, 0, 0.15);\n        text-align: left;\n        width: 100%;\n    }\n\n    .song-card:hover {\n        background: rgba(255, 255, 255, 0.15);\n    }\n\n    .song-card.selected {\n        background: var(--color-primary-alpha, rgba(244, 63, 94, 0.2));\n    }\n\n    .song-info {\n        display: flex;\n        align-items: center;\n        gap: var(--space-1, 0.2rem);\n        flex: 1;\n    }\n\n    .song-number {\n        color: var(--text-secondary, #9f1239);\n        font-size: 0.8rem;\n        min-width: 1.2rem;\n        text-align: right;\n    }\n\n    .song-title {\n        color: var(--text-primary, #881337);\n        font-size: 0.9rem;\n        font-weight: 500;\n    }\n\n    .heart-badge-song {\n        width: 1.2rem;\n        height: 1.2rem;\n        color: var(--color-primary, rgb(244, 63, 94));\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-shrink: 0;\n    }\n\n    .heart-number-song {\n        position: absolute;\n        color: var(--text-light, white);\n        font-size: 0.7rem;\n        font-weight: bold;\n    }\n</style>"
    },
    {
      "file": "src/routes/albums/results/+page.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import { getContext } from 'svelte';\n    import type { MusicContext } from '$lib/context/music.svelte';\n    import { goto } from '$app/navigation';\n    import { base } from '$app/paths';\n    import { onMount } from 'svelte';\n    import confetti from 'canvas-confetti';\n    import { fade } from 'svelte/transition';\n    import Header from '$lib/components/layout/Header.svelte';\n    import Footer from '$lib/components/layout/Footer.svelte';\n    import Button from '$lib/components/Button/Button.svelte';\n    import StandardLayout from '$lib/components/layout/StandardLayout.svelte';\n    import VinylRecord from '$lib/components/music/VinylRecord.svelte';\n\n    const music = getContext<() => MusicContext>('music')();\n\n    function handleProceed() {\n        goto(`/feed`);\n    }\n\n    function isColorLight(color: string) {\n        const hex = color.replace('#', '');\n        const r = parseInt(hex.substr(0, 2), 16);\n        const g = parseInt(hex.substr(2, 2), 16);\n        const b = parseInt(hex.substr(4, 2), 16);\n        const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n        return brightness > 155;\n    }\n\n    let mounted = $state(false);\n    let showAlbum1 = $state(false);\n    let showAlbum2 = $state(false);\n    let showAlbum3 = $state(false);\n\n    onMount(() => {\n        mounted = true;\n        \n        // Start animation sequence after a short delay\n        setTimeout(() => {\n            showAlbum1 = true;\n            \n            setTimeout(() => {\n                showAlbum2 = true;\n                \n                setTimeout(() => {\n                    showAlbum3 = true;\n                    // Trigger confetti when all albums appear\n                    confetti({\n                        particleCount: 150,\n                        spread: 100,\n                        origin: { x: 0.5, y: 0.5 },\n                        colors: ['#FFB6C1', '#FF69B4', '#FF1493'],\n                        disableForReducedMotion: true\n                    });\n                }, 600);\n            }, 600);\n        }, 300);\n    });\n</script>\n\n<StandardLayout>\n    {#snippet header()}\n        <Header \n            title=\"Your Top 3\"\n            subtitle=\"Your favorite albums and songs\" />\n    {/snippet}\n\n    <div class=\"flex-1 p-6\">\n        {#if mounted}\n            <div class=\"results-container\">\n                {#if showAlbum1}\n                    <div class=\"album-result\">\n                        <div class=\"heart-badge\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"heart-icon\">\n                                <path d=\"M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z\" />\n                            </svg>\n                            <span class=\"heart-number\">1</span>\n                        </div>\n                        <div class=\"album-container\" transition:fade={{duration: 300}}>\n                            <div class=\"album-display\">\n                                <VinylRecord\n                                    coverArt={music.selectedAlbums[0].coverArt}\n                                    title={music.selectedAlbums[0].title}\n                                    selected={true}\n                                    selectionNumber={1}\n                                    badgePosition=\"none\"\n                                    showSelectionOverlay={false}\n                                    showGrooves={true}\n                                    class_=\"results-vinyl\"\n                                />\n                                <div class=\"song-list\">\n                                    <ul class=\"songs\">\n                                        {#each music.selectedSongsByAlbum.get(music.selectedAlbums[0].id) || [] as song, i}\n                                            <div class=\"song-wrapper\">\n                                                <span class=\"song-rank\" style=\"color: {music.selectedAlbums[0].color}\">{i + 1}</span>\n                                                <li class=\"song-item\" style=\"background-color: {music.selectedAlbums[0].color}; color: {isColorLight(music.selectedAlbums[0].color) ? '#000' : '#fff'}\">\n                                                    {song}\n                                                </li>\n                                            </div>\n                                        {/each}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                {/if}\n\n                {#if showAlbum2}\n                    <div class=\"album-result\">\n                        <div class=\"heart-badge\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"heart-icon\">\n                                <path d=\"M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z\" />\n                            </svg>\n                            <span class=\"heart-number\">2</span>\n                        </div>\n                        <div class=\"album-container\" transition:fade={{duration: 300}}>\n                            <div class=\"album-display\">\n                                <VinylRecord\n                                    coverArt={music.selectedAlbums[1].coverArt}\n                                    title={music.selectedAlbums[1].title}\n                                    selected={true}\n                                    selectionNumber={2}\n                                    badgePosition=\"none\"\n                                    showSelectionOverlay={false}\n                                    showGrooves={true}\n                                    class_=\"results-vinyl\"\n                                />\n                                <div class=\"song-list\">\n                                    <ul class=\"songs\">\n                                        {#each music.selectedSongsByAlbum.get(music.selectedAlbums[1].id) || [] as song, i}\n                                            <div class=\"song-wrapper\">\n                                                <span class=\"song-rank\" style=\"color: {music.selectedAlbums[1].color}\">{i + 1}</span>\n                                                <li class=\"song-item\" style=\"background-color: {music.selectedAlbums[1].color}; color: {isColorLight(music.selectedAlbums[1].color) ? '#000' : '#fff'}\">\n                                                    {song}\n                                                </li>\n                                            </div>\n                                        {/each}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                {/if}\n\n                {#if showAlbum3}\n                    <div class=\"album-result\">\n                        <div class=\"heart-badge\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"heart-icon\">\n                                <path d=\"M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z\" />\n                            </svg>\n                            <span class=\"heart-number\">3</span>\n                        </div>\n                        <div class=\"album-container\" transition:fade={{duration: 300}}>\n                            <div class=\"album-display\">\n                                <VinylRecord\n                                    coverArt={music.selectedAlbums[2].coverArt}\n                                    title={music.selectedAlbums[2].title}\n                                    selected={true}\n                                    selectionNumber={3}\n                                    badgePosition=\"none\"\n                                    showSelectionOverlay={false}\n                                    showGrooves={true}\n                                    class_=\"results-vinyl\"\n                                />\n                                <div class=\"song-list\">\n                                    <ul class=\"songs\">\n                                        {#each music.selectedSongsByAlbum.get(music.selectedAlbums[2].id) || [] as song, i}\n                                            <div class=\"song-wrapper\">\n                                                <span class=\"song-rank\" style=\"color: {music.selectedAlbums[2].color}\">{i + 1}</span>\n                                                <li class=\"song-item\" style=\"background-color: {music.selectedAlbums[2].color}; color: {isColorLight(music.selectedAlbums[2].color) ? '#000' : '#fff'}\">\n                                                    {song}\n                                                </li>\n                                            </div>\n                                        {/each}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                {/if}\n            </div>\n        {/if}\n    </div>\n\n    {#snippet footer()}\n        <Footer variant=\"button\" >\n            <Button \n                variant=\"primary\"\n                on:click={handleProceed}\n            >\n                Proceed\n            </Button>\n        </Footer>\n    {/snippet}\n</StandardLayout>\n\n<style>\n    .results-container {\n        display: flex;\n        flex-direction: column;\n        gap: var(--grid-gap-sm, 1rem);\n        max-width: var(--container-max-width, 32rem);\n        margin: 0 auto;\n    }\n\n    .album-container {\n        background: white;\n        border-radius: var(--radius-lg, 1rem);\n        padding: 0.75rem;\n        box-shadow: var(--shadow-md, 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06));\n        transition: transform var(--duration-fast, 0.15s) var(--timing-function, ease-out);\n        touch-action: manipulation;\n    }\n\n    .album-container:active {\n        transform: scale(0.99);\n    }\n\n    .album-display {\n        display: flex;\n        gap: 0.75rem;\n        align-items: center;\n        position: relative;\n    }\n\n    :global(.results-vinyl) {\n        width: 120px;\n        height: 120px;\n        flex-shrink: 0;\n    }\n\n    .song-list {\n        flex-grow: 1;\n        max-height: 120px;\n        overflow-y: auto;\n    }\n\n    .song-wrapper {\n        display: flex;\n        align-items: center;\n        gap: var(--space-1, 0.25rem);\n        margin-bottom: 0.125rem;\n    }\n\n    .song-rank {\n        font-size: 0.8rem;\n        min-width: 1rem;\n        text-align: right;\n    }\n\n    .song-item {\n        padding: var(--space-1, 0.2rem) var(--space-2, 0.375rem);\n        border-radius: var(--radius-md, 0.5rem);\n        font-size: 0.9rem;\n        transition: transform var(--duration-fast, 0.15s) var(--timing-function, ease-out);\n        touch-action: manipulation;\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0.1);\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        flex: 1;\n    }\n\n    .song-item:active {\n        transform: scale(0.98);\n    }\n\n    .songs {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n    }\n\n    @keyframes heartbeat {\n        0% { transform: scale(1); }\n        14% { transform: scale(1.1); }\n        28% { transform: scale(1); }\n        42% { transform: scale(1.1); }\n        70% { transform: scale(1); }\n    }\n\n    .heart-badge {\n        position: absolute;\n        top: -1rem;\n        left: -1rem;\n        width: 3.6rem;\n        height: 3.6rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: var(--z-overlay, 30);\n        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));\n        animation: heartbeat var(--duration-medium, 2s) ease-in-out infinite;\n    }\n\n    .heart-icon {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        color: var(--color-primary, rgb(244, 63, 94));\n    }\n\n    .heart-number {\n        position: relative;\n        color: var(--text-light, white);\n        font-weight: bold;\n        font-size: 1.25rem;\n        z-index: 11;\n        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);\n    }\n\n    .album-result {\n        position: relative;\n    }\n</style>"
    }
  ]
}