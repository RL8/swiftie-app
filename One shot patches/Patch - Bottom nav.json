{
  "patches": [
    {
      "file": "src/routes/+layout.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import '../app.css';\n    import { page } from '$app/stores';\n    import { setContext } from 'svelte';\n    import { base } from '$app/paths';\n    import { createMusicContext } from '$lib/context/music.svelte';\n    import BottomNav from '$lib/components/BottomNav.svelte';\n    import StandardLayout from '$lib/components/layout/StandardLayout.svelte';\n    \n    // First, create the context\n    const musicContext = $state(createMusicContext());\n    \n    // Then set the context for child components\n    $effect(() => {\n        setContext('music', () => musicContext);\n    });\n    \n    // Determine if bottom nav should be shown based on path\n    const hideBottomNav = $derived(\n        ['/albums', '/auth', '/list-keeper', '/profile/edit']\n            .some(path => $page.url.pathname.startsWith(path))\n    );\n</script>\n\n<StandardLayout>\n    <div class:pb-16={!hideBottomNav}>\n        <slot />\n    </div>\n    \n    {#if !hideBottomNav}\n        <BottomNav />\n    {/if}\n</StandardLayout>\n\n<style>\n    :global(html) {\n        background-color: rgb(226, 232, 240);\n        height: 100%;\n    }\n\n    :global(body) {\n        height: 100%;\n        margin: 0;\n        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n</style>"
    },
    {
      "file": "src/lib/components/BottomNav.svelte",
      "action": "update",
      "content": "<script lang=\"ts\">\n    import { page } from '$app/stores';\n    import { base } from '$app/paths';\n    \n    // Define navigation items using typed runes\n    const navItems = $state([\n        { \n            path: `${base}/feed`, \n            label: 'Feed', \n            icon: 'üìú',\n            ariaLabel: 'Feed page' \n        },\n        { \n            path: `${base}/swiftivities`, \n            label: 'Swiftivities', \n            icon: '‚ú®',\n            ariaLabel: 'Swiftivities page' \n        },\n        { \n            path: `${base}/list-keeper`, \n            label: 'Lists', \n            icon: 'üìù',\n            ariaLabel: 'Lists page' \n        },\n        { \n            path: `${base}/profile`, \n            label: 'Profile', \n            icon: 'üéµ',\n            ariaLabel: 'Profile page' \n        }\n    ]);\n\n    // Derived state for current path\n    let currentPath = $derived($page.url.pathname);\n    let currentPathWithoutBase = $derived(currentPath.replace(base, ''));\n</script>\n\n<nav class=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 py-2 px-4 max-w-md mx-auto\" aria-label=\"Main navigation\">\n    <div class=\"flex justify-around items-center\">\n        {#each navItems as { path, label, icon, ariaLabel }}\n            <a \n                href={path} \n                class=\"flex flex-col items-center p-2 {currentPathWithoutBase === path.replace(base, '') ? 'text-rose-600' : 'text-gray-600'}\"\n                aria-label={ariaLabel}\n                aria-current={currentPathWithoutBase === path.replace(base, '') ? 'page' : undefined}\n            >\n                <span class=\"text-2xl\" aria-hidden=\"true\">{icon}</span>\n                <span class=\"text-xs mt-1\">{label}</span>\n            </a>\n        {/each}\n    </div>\n</nav>"
    },
    {
      "file": "src/lib/context/user.svelte.ts",
      "action": "create",
      "content": "import type { ProfileState, UserProfile } from '$lib/types/user';\n\nexport function createUserProfileContext() {\n    // Initialize user profile state with default values\n    const profile = $state<UserProfile>({\n        username: '',\n        profileState: 'unregistered',\n        albumsRated: 0,\n        listsCreated: 0\n    });\n\n    // Methods for managing user profile\n    function getProfileState(): ProfileState {\n        return profile.profileState;\n    }\n\n    async function initiateRedditAuth() {\n        // TODO: Implement Reddit OAuth flow\n        // Placeholder implementation\n        profile.profileState = 'free';\n        profile.username = 'SwiftFan123';\n        profile.redditUsername = 'swift_enthusiast';\n    }\n\n    async function initiateUpgrade() {\n        // TODO: Implement payment flow\n        // Placeholder implementation\n        profile.profileState = 'premium';\n    }\n\n    function getUserDetails() {\n        return {\n            username: profile.username,\n            profileState: profile.profileState,\n            albumsRated: profile.albumsRated,\n            listsCreated: profile.listsCreated,\n            redditUsername: profile.redditUsername\n        };\n    }\n\n    function incrementAlbumsRated() {\n        profile.albumsRated++;\n    }\n\n    function incrementListsCreated() {\n        profile.listsCreated++;\n    }\n\n    return {\n        get username() { return profile.username; },\n        get listsCreated() { return profile.listsCreated; },\n        get albumsRated() { return profile.albumsRated; },\n        getProfileState,\n        getUserDetails,\n        initiateRedditAuth,\n        initiateUpgrade,\n        incrementAlbumsRated,\n        incrementListsCreated\n    };\n}\n\n// Type for the context return value\nexport type UserProfileContext = ReturnType<typeof createUserProfileContext>;"
    }
  ]
}
